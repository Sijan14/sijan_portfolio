[
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "My Blog",
    "section": "",
    "text": "What Are Data Structures? A Simple Introduction for Beginners\n\n\n\n\n\n\n\nData Science\n\n\n\n\nLearn what data structures are, why they matter, and how they can improve the efficiency of your code. This blog introduces key concepts in an easy-to-understand way for those just starting their coding journey.\n\n\n\n\n\n\nDec 20, 2024\n\n\nMd Allama Ikbal Sijan\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Md Allama Ikbal Sijan",
    "section": "",
    "text": "Hi there! I’m Sijan (Yess! I go by my last name-I will tell you the story someday!). I’m a Ph.D. candidate in Industrial-Organizational Psychology with a concentration in Data Science. I also teach undergraduate statistics and have a passion for discussing topics like assessment development, fairness, validity, psychometrics, data visualization, natural language processing (NLP), and artificial intelligence (AI). Poke around my website to learn more!\n\n \n\nwidget credit: richpauloo.github.io"
  },
  {
    "objectID": "posts/2024-12-20-data-structure-basics/index.html",
    "href": "posts/2024-12-20-data-structure-basics/index.html",
    "title": "What Are Data Structures? A Simple Introduction for Beginners",
    "section": "",
    "text": "When working with data, organizing, storing, and performing operations on it efficiently is key. This is where data structures come into play. In simple terms, a data structure is a way of organizing and managing data so that it can be accessed and modified efficiently.\n\nData Type vs. Data Structure\nIf you are reading this, you’re likely already familiar with data types such as int (integer), float (floating-point number), str (string), and bool (Boolean). These are the building blocks used to define the kind of data you’re working with. When you perform data cleaning or analysis, you often manipulate these primitive data types.\nData structures build on these basic data types to manage and organize data more effectively. Think of it like constructing a car: the raw materials like metal and plastic are akin to the primitive data types, while the car’s components, such as the engine, trunk, doors, and wheels, represent the data structures. In essence, data structures use data types to create organized frameworks that allow for efficient storage and operations on your data.\n\n\nCommon Operations\nData structures are essential tools in programming because they allow you to store, organize, and manage data efficiently. Common operations performed with data structures include:\n\nInsertion: Adding new elements.\nDeletion: Removing existing elements.\nSearching: Finding specific elements.\nAccessing: Retrieving elements by their position or key.\nUpdating: Modifying existing elements.\n\nWhile data types tell the computer what kind of data is being stored (e.g., integers, strings, floats), they do not inherently provide a way to store multiple values together or perform advanced operations. For managing multiple similar data points, data structures become invaluable.\n\n\nWhy Use Data Structures?\nIf you have several similar pieces of data to store and manipulate later, using a data structure allows for organized and efficient operations. Here’s an example:\n\n\n\nExample: Storing Student Grades\nImagine you have 5 students in a class who took a final exam. Their grades need to be stored for future calculations.\n\nWithout a Data Structure\nUsing only data types, you could store the grades in separate variables like this:\nstudent1 = 85\nstudent2 = 90\nstudent3 = 78\nstudent4 = 92\nstudent5 = 88\nThis approach works but becomes cumbersome as the number of students increases. Operations like calculating the average grade or updating a grade require manual effort for each variable.\n\n\nWith a Data Structure (Array)\nInstead, you can use an array to store the grades:\nstudent_grades = [85, 90, 78, 92, 88]\nNow you can perform operations more efficiently:\n# Access a specific grade: Retrieve the second student's grade\nsecond_grade = student_grades[1]  # Outputs 90\n\n# Update a grade: Add extra credit to the third student's grade\nstudent_grades[2] += 5  # Updates 78 to 83\n\n# Calculate the average grade: Compute the average for all students\naverage_grade = sum(student_grades) / len(student_grades)  # Outputs 86.6\n\n# Add a new student: Include another student's grade\nstudent_grades.append(95)\n\n# Remove a student: Remove the grade of a student who dropped out\nstudent_grades.pop(1)  # Removes the second student's grade\n\n\nWith a Data Structure (Hash Table)\nIf you need to associate grades with student names for better clarity, a hash table (dictionary) works even better:\nstudent_grades = {\n    \"Sijan\": 85,\n    \"Bella\": 90,\n    \"Alex\": 78,\n    \"Taylor\": 92,\n    \"Jordan\": 88\n}\nWith this structure:\n\nAccessing a grade by name is straightforward:\n\nbella_grade = student_grades[\"Bella\"]  # Outputs 90\n\nUpdating grades is intuitive:\n\nstudent_grades[\"Alex\"] += 5  # Updates Alex's grade to 83\n\nAdding or removing students is easy:\n\nstudent_grades[\"Chris\"] = 95  # Adds Chris with a grade of 95\ndel student_grades[\"Taylor\"]  # Removes Taylor\n\n\n\nCommon Data Structures\nUnderstanding the unique characteristics of different data structures—whether they are ordered or unordered, and what operations they excel at—helps in selecting the best one for a given task.\n\nArray: An ordered collection of elements, best for quick access and iteration.\nLinked List: An ordered, dynamic structure where elements are linked, ideal for frequent insertions and deletions.\nTrees: A hierarchical, ordered structure, excellent for representing hierarchical relationships and performing searches.\nHash Table: An unordered structure using key-value pairs, best for fast lookups and retrievals.\nHeap: A specialized tree-based structure, great for efficient retrieval of the smallest or largest element.\nGraphs: A network of nodes connected by edges, perfect for modeling relationships and performing pathfinding operations.\n\n\n\nData Structures vs. Abstract Data Types (ADT)\nEven if you’re not very familiar with the different data structures I’ve mentioned, you’re likely familiar with Abstract Data Types (ADTs) like lists, sets, and dictionaries. ADTs essentially define the operations or functionalities you can perform on data, while data structures are the low-level implementations that make those operations possible. Using the car example again, the ADT represents the car’s functionalities—driving, braking, and steering—while the data structures are the specific building blocks like the engine, wheels, and frame that make those functionalities work. ADTs are high-level abstract concepts, while data structures are the concrete details that enable those concepts to function.\nKnowing just the ADT and its functionality will take you a long way, and you don’t necessarily need to understand the underlying data structures to perform different tasks. For instance, a list can be implemented using either an array or a linked list. When you use the built-in list function, like my_list = [], you don’t need to know whether it’s implemented using an array or a linked list. However, understanding the underlying data structure can be important for optimizing performance, such as improving runtime or space complexity. This deeper understanding helps you make more efficient decisions when choosing how to implement solutions, especially when performance is critical.\n\n\nCommon ADTs\nHere are some common ADTs and the data structures used to implement them:\n\nList: Array, Linked List\nStack: Array, Linked List\nQueue: Array, Linked List, Circular Buffer\nDeque: Array, Doubly Linked List\nSet: Hash Table, BST\nBag: Array, Linked List\nPriority Queue: Binary Heap, Fibonacci Heap\nDictionary: Hash Table, BST\n\n\n\nReal World Applications\nDifferent data structures are utilized in real-world applications to optimize performance, manage data efficiently, and solve complex problems. Here are some practical implementations of commonly used data structures:\n\nArray: Arrays are used in applications like image processing and spreadsheets where data is stored in contiguous memory locations for quick access.\nLinked List: Linked lists are utilized in web browsers to manage navigation history, allowing for easy forward and backward movement.\nStack: Stacks are implemented in function call management, as well as in undo/redo operations in text editors, following the Last In, First Out (LIFO) principle.\nQueue: Queues are used in operating systems for task scheduling and in customer service systems to process requests in the order they arrive.\nSet: Sets are applied in social media platforms to store unique user data, such as friend lists, without duplicates.\nHash Table: Hash tables are used in contact management systems to map a user’s name to their phone number for fast lookups.\nBinary Search Tree (BST): BSTs are used in databases for fast searching, insertion, and deletion of sorted records.\nHeap: Heaps are implemented in job scheduling systems to prioritize tasks based on urgency or importance.\nGraph: Graphs are used to model networks like social media connections, transportation systems, and web pages.\n\n\n\nConclusion\nThese are just a few examples of how data structures are applied in the real world, and there are countless other uses that I haven’t covered here. It took me some time to truly grasp the key differences between data structures and other data types. This brief introduction to data structures serves as a way for me to reinforce my own understanding and, hopefully, help others in the process.\nData structures are fundamental tools for organizing and managing data efficiently across various real-world applications. From simple structures like arrays and linked lists to more complex ones like hash tables and graphs, each data structure has its own purpose based on the specific problem you’re trying to solve. Understanding these practical applications enables us to select the right data structure, optimize performance, and tackle challenges more effectively.\nIf you found this post helpful or have any feedback, I’d love to hear your thoughts—feel free to leave a comment below!\n\n\nReference\nzyBooks, a Wiley brand. (2024). Data Structures With Python. https://learn.zybooks.com/zybook/MONTCLAIRCSIT506ZharriFall2024 (accessed 2024).\n{{ include “giscus.html” }}\n\n\n\n\nCitationBibTeX citation:@online{allama ikbal sijan2024,\n  author = {Allama Ikbal Sijan, Md},\n  title = {What {Are} {Data} {Structures?} {A} {Simple} {Introduction}\n    for {Beginners}},\n  date = {2024-12-20},\n  url = {https://sijan14.github.io/sijan_portfolio/posts/2024-12-20-data-structure-basics/},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nAllama Ikbal Sijan, Md. 2024. “What Are Data Structures? A Simple\nIntroduction for Beginners.” December 20, 2024. https://sijan14.github.io/sijan_portfolio/posts/2024-12-20-data-structure-basics/."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hey there! I’m Sijan, a Ph.D. candidate in Industrial-Organizational Psychology with a concentration in Data Science at Montclair State University. In other words, I’m passionate about people, data, and making workplaces better for everyone.\n\n\nI blend psychology with cutting-edge data science techniques to create psychometrically valid, reliable assessment tools. By leveraging natural language processing (NLP) and large language models (LLMs), I design psychometrically robust tools to predict key organizational metrics like job satisfaction, engagement, and turnover. My most recent work focuses on examining the validity, predictive bias, and risk of adverse impact of AI-based assessment tools and scoring systems. I also explore topics like team decision-making, delay discounting, and biases and heuristics.\n\n\n\nWhen I’m not diving into data or teaching statistics as an adjunct professor, I’m leading initiatives and workshops for METRO, SIO NYC, and Eagle I/O, empowering I/O students and professionals. I’ve also worked with organizations like JUST Capital and City Bank, helping them make data-driven decisions to enhance their workforce strategies."
  },
  {
    "objectID": "about.html#about-me",
    "href": "about.html#about-me",
    "title": "About",
    "section": "",
    "text": "Hey there! I’m Sijan, a Ph.D. candidate in Industrial-Organizational Psychology with a concentration in Data Science at Montclair State University. In other words, I’m passionate about people, data, and making workplaces better for everyone.\n\n\nI blend psychology with cutting-edge data science techniques to create psychometrically valid, reliable assessment tools. By leveraging natural language processing (NLP) and large language models (LLMs), I design psychometrically robust tools to predict key organizational metrics like job satisfaction, engagement, and turnover. My most recent work focuses on examining the validity, predictive bias, and risk of adverse impact of AI-based assessment tools and scoring systems. I also explore topics like team decision-making, delay discounting, and biases and heuristics.\n\n\n\nWhen I’m not diving into data or teaching statistics as an adjunct professor, I’m leading initiatives and workshops for METRO, SIO NYC, and Eagle I/O, empowering I/O students and professionals. I’ve also worked with organizations like JUST Capital and City Bank, helping them make data-driven decisions to enhance their workforce strategies."
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "About",
    "section": "🎓 Education",
    "text": "🎓 Education\n\nDoctor of Philosophy, Industrial-Organizational Psychology (Concentration: Data Science)\nMontclair State University | 2022 - 2026\nGraduate Certificate in Advanced Quantitative Methods\nMontclair State University | 2022 - 2025\nMaster of Arts, Industrial-Organizational Psychology\nMontclair State University | 2022 - 2024\nBachelor of Arts, Global Management & Psychology\nEarlham College | 2018 - 2022"
  },
  {
    "objectID": "about.html#experience",
    "href": "about.html#experience",
    "title": "About",
    "section": "🧑🏽‍💻 Experience",
    "text": "🧑🏽‍💻 Experience\n\nDoctoral Research Assistant, Montclair State University | August 2022 - Present\nAdjunct Professor, Montclair State University | September 2024 - Present\nCo-Director of Education, METRO | October 2023 - Present\nFounding Board Member, SIONYC | September 2023 - May 2024\nPresident & Consultant, Eagle I.O | September 2023 - May 2024\nResearch Intern, JUST Capital | May 2023 - August 2023\nGraduate Assistant, Center for Writing Excellence | September 2022 - May 2023\nConsulting & Data Analytics Extern, Paragon One | June 2022 - September 2022\nHR Reporting Intern, City Bank Limited | May 2021 - August 2021"
  },
  {
    "objectID": "about.html#presentations",
    "href": "about.html#presentations",
    "title": "About",
    "section": "🎙️Presentations",
    "text": "🎙️Presentations\n\nSijan, M. (Co-chair), Belwalkar, B. B. (Co-chair) & Mracek, D. (Discussant) (2025). Power of NLP and LLMs: Turning I/O Research and Practice into a Textual Adventure [Symposium]. Society for Industrial and Organizational Psychology Annual Conference, Denver, CO, United States.*\nHuynh, C., Elfeki, Y., Sijan, M. (2025). Modeling Latent Constructs in SJT Using Pseudo-Factor Analysis [Poster]. Society for Industrial and Organizational Psychology Annual Conference, Denver, CO, United States.*\nSijan, M., Bixter, M. T. (2024). Using NLP to Predict Job Satisfaction and Turnover Intention [Poster Presentation]. The Psychonomic Society Annual Meeting, New York, NY, United States.\nBragger, J., Helisch, R., Buczek, E., Hunt, L., Sijan, M., Abbasi, F., Filstein, T., Myszko, Z., Sherman, C., & Lakusta, L. (2024). Neurodiversity in Leadership: The Relationship Between Theory of Mind and Leadership Roles, and Possible Implications for Neurodivergent Workers [Presentation]. Interdisciplinary Perspectives on Leadership Symposium, Thessaloniki, Greece.\nSijan, M., Kramer, M. (Co-Chair), Kulas, J. (Co-Chair), Helisch, R., Lancuna, L., Defabiis, M., Hunt, L., Notari, K., (2024). Unlocking the value of IO Psychology Student Consulting in Higher Education [Panel Presentation]. Society for Industrial and Organizational Psychology Annual Conference, Chicago, IL, United States.\nElfeki, Y., Huynh, C., Sijan, M., Salter, N. P. (2024). An Exploration of Masculinity and Femininity Perceptions Across Monoracial and Biracial Identities using StyleGAN Imagery [Symposium]. Society for Industrial and Organizational Psychology Annual Conference, Chicago, IL, United States.\nHunt, L., Bragger, J., Kubu, G., Abbasi, F., & Sijan, M. (2024). Leading the Goals’ Rush: How leadership mindsets make all the difference [Poster Presentation]. Society for Industrial and Organizational Psychology Annual Conference, Chicago, IL, United States.\nSijan M. (2022). Perception of Trust Based on Parenthood Status [Poster Presentation]. 94th Annual MPA (Midwestern Psychological Association) Conference. Chicago, IL, United States."
  }
]